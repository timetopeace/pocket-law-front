import { ComponentPublicInstance } from 'vue';
import { GlobalMountOptions } from './types';
import { VueWrapper } from './vueWrapper';
import { DOMWrapper } from './domWrapper';
interface GlobalConfigOptions {
    global: Required<GlobalMountOptions>;
    plugins: {
        VueWrapper: Pluggable<VueWrapper<ComponentPublicInstance>>;
        DOMWrapper: Pluggable<DOMWrapper<Element>>;
    };
    renderStubDefaultSlot: boolean;
}
interface Plugin<Instance> {
    handler: (instance: Instance, options: Record<string, any>) => Record<string, any>;
    options: Record<string, any>;
}
declare class Pluggable<Instance = DOMWrapper<Element>> {
    installedPlugins: Plugin<Instance>[];
    install(handler: (instance: Instance, options?: Record<string, any>) => Record<string, any>, options?: Record<string, any>): void;
    extend(instance: Instance): void;
    /** For testing */
    reset(): void;
}
export declare const config: GlobalConfigOptions;
export {};
